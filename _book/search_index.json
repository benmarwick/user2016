[
["index.html", "useR2016 Conference Videos 1 Introduction Author", " useR2016 Conference Videos Andrew Clark 12th July 2016 1 Introduction This acts as a repository for my favourite video talks from the recent useR2016 conference along with the ability to view any of the talks via a clickable table. It is almost certainly not the best method of presentation but is a trial run for creating and deploying interactive books to bookdown.org Author Andrew Clark is an independent R developer based in North Vancouver He has for many years supplied statistical sports data on the web but with the interactive opportunities arising from the shiny framework and the ability to swiftly create interesting visualizations via dashboards has branched out into many different areas. An introduction to his work can be found under the mytinyshinys umbrella "],
["video-views.html", "2 Video Views", " 2 Video Views At the time of writing, there are 155 individual talks, plus lightning session, to be found on the conference website The viewing information is heavily weighted to certain topics with the top three presenters garnering 40% of total views. Hover points for exact percentage The table lists all available videos by title and speaker. Make a selection, click on row and scroll down to view talk "],
["hadley-wickham.html", "3 Hadley Wickham", " 3 Hadley Wickham Chief Scientist, RStudio Towards a grammar of interactive graphics I announced ggvis in 2014, but there has been little progress on it since. In this talk, I’ll tell you a little bit about what I’ve been working on instead (data ingest, purrr, multiple models, …) and tell you my plans for the future of ggvis. The goal is for 2016 to be the year of ggvis, and I’m going to be putting a lot of time into ggvis until it’s a clear replacement for ggplot2. I’ll talk about some of the new packages that will make this possible (including ggstat, ggeom, and gglayout), and how this work is also going to improve ggplot2. "],
["jj-allaire.html", "4 JJ Allaire", " 4 JJ Allaire Founder RStudio Notebooks with R Markdown Notebook interfaces for data analysis have compelling advantages including the close association of code and output and the ability to intersperse narrative with computation. Notebooks are also an excellent tool for teaching and a convenient way to share analyses. As an authoring format, R Markdown bears many similarities to traditional notebooks like Jupyter and Beaker, but it has some important differences. R Markdown documents use a plain-text representation (markdown with embedded R code chunks) which creates a clean separation between source code and output, is editable with the same tools as for R scripts (.Rmd modes are available for Emacs, Vim, Sublime, Eclipse, and RStudio), and works well with version control. R Markdown also features a system of extensible output formats that enable reproducible creation of production-quality output in many formats including HTML, PDF, Word, ODT, HTML5 slides, Beamer, LaTeX-based journal articles, websites, dashboards, and even full length books. In this talk we’ll describe a new notebook interface for R that works seamlessly with existing R Markdown documents and displays output inline within the standard RStudio .Rmd editing mode. Notebooks can be published using the traditional Knit to HTML or PDF workflow, and can also be shared with a compound file that includes both code and output, enabling readers to easily modify and re-execute the code. Building a notebook system on top of R Markdown carries forward its benefits (plain text, reproducible workflow, and production quality output) while enabling a richer, more literate workflow for data analysis. "],
["javier-luraschi.html", "5 Javier Luraschi", " 5 Javier Luraschi Importing Modern data into R This talk explores modern trends in data storage formats and the tools, packages and best practices to import this data into R. We will start with a quick recap of the existing tools and packages for importing data into R: readr, readxl, haven, jsonlite, xml2, odbc and jdbc. Afterwards, we will discuss modern data formats and the emerging tools we can use today. We will explore sparkr, mongolite and the role of specialized packages like fitbitScraper and getSymbols. This talk will wrap up by assessing gaps and exploring future trends in this space. "],
["oliver-bracht.html", "6 Oliver Bracht", " 6 Oliver Bracht Implementing R in old economy companies: From proof-of-concept to production In old economy companies, the introduction of R is typically a button-up process that follows a pattern of three major stages of maturity: At the first stage, guerrilla projects use R parallel to the “official” IT environment. The usage of R is often initiated by interns, student assistants or newly recruited graduates. At the second stage, when the results of the guerrilla projects attract the attention of business departments, R is used as analytic language in proof-of-concept projects. When the proof-of-concept has been successful, the outcome shall be transferred to the production system. At this stage R is being introduced “officially” to the IT environment. While the first and second level of maturity usually do not cause any major problems, the step to the third level is most crucial for the long term success of the implementation of R. This talk will focus on how to master the switch from proof-of-concept to production. It will show based on real world experiences typical road blocks as well as the most important success factors. "],
["tal-galili.html", "7 Tal Galili", " 7 Tal Galili Heatmaps in R: Overview and best practices A heatmap is a popular graphical method for visualizing high-dimensional data, in which a table of numbers are encoded as a grid of colored cells. The rows and columns of the matrix are ordered to highlight patterns and are often accompanied by dendrograms. Heatmaps are used in many fields for visualizing observations, correlations, missing values patterns, and more. This talk will provide an overview of R functions and packages for creating useful and beautiful heatmaps. Attention will be given to data pre-processing, choosing colors for the data-matrix via {viridis}, producing thoughtful dendrograms using {dendextend} and {colorspace}, while ordering the rows and columns with {DendSer} (and {seriation}). The talk will cover both static as well as the newly available interactive plotting engines using packages such as {gplots}, {d3heatmap}, {ggplot2} and {plotly}. The speaker is the author of the {dendextend} R package, a co-author of the {d3heatmap} package, and blogs at www.r-statistics.com. "],
["jenny-bryan.html", "8 Jenny Bryan", " 8 Jenny Bryan UBC Towards a grammar of interactive graphics One out of every ten people on the planet uses a spreadsheet and about half of those use formulas: “Let’s not kid ourselves: the most widely used piece of software for statistics is Excel.” (Ripley, 2002) Those of us who script analyses are in the distinct minority! There are several effective packages for importing spreadsheet data into R. But, broadly speaking, they prioritize access to [a] data and [b] data that lives in a neat rectangle. In our collaborative analytical work, we battle spreadsheets created by people who did not get this memo. We see messy sheets, with multiple data regions sprinkled around, mixed with computed results and figures. Data regions can be a blend of actual data and, e.g., derived columns that are computed from other columns. We will present our work on extracting tricky data and formula logic out of spreadsheets. To what extent can data tables be automatically identified and extracted? Can we identify columns that are derived from others in a wholesale fashion and translate that into something useful on the R side? The goal is to create a more porous border between R and spreadsheets. Target audiences include novices transitioning from spreadsheets to R and experienced useRs who are dealing with challenging sheets "],
["ian-lyttle.html", "9 Ian Lyttle", " 9 Ian Lyttle Using Shiny modules to build more-complex and more-manageable apps The release of Shiny 0.13 includes support for modules, allowing you to build Shiny apps more quickly and more reliably. Furthermore, using Shiny modules makes it easier for you to build more-complex apps, because the interior complexity of each module is hidden from the level of the app. This allows you, as a developer, to focus on the complexity of the app at the system-level, rather than at the module-level. For example, there are open-source shiny modules that: read a time-indexed csv file then parse it into a dataframe, visualize a time-indexed dataframe using dygraphs, and write a dataframe to a csv file to be downloaded. Modules are simply collections of functions that can be organized into, and called from, packages. The primary focus of this presentation will be on how modules from the “shinypod” package can be assembled to into “simple” shiny apps. As well, there will be demonstrations of more-complex apps built using modules. In this case, Shiny apps are built as interfaces to web-services, allowing you to evaluate the usefulness of suites of web-services without having to be immediately concerned with the API clients. Time permitting, there could be some discussion of how Shiny modules are put together. "],
["yihui-xie-subbed-by-hadley-w-.html", "10 Yihui Xie (subbed by Hadley W.)", " 10 Yihui Xie (subbed by Hadley W.) Authoring Books with R Markdown Markdown is a simple and popular language for writing. R Markdown (http://rmarkdown.rstudio.com) has made it really easy to author documents that contain R code, and convert these documents to a variety of output formats, including PDF, HTML, Word, and presentations. There are still some missing pieces in the toolchain, especially when writing long-form articles and books, such as cross-references, automatic numbering of figures/tables, multiple-page HTML output and a navigation system, and so on. The R package bookdown has solved all these problems for several types of output formats, such as HTML, PDF, EPUB and MOBI e-books. The visual style of the book is customizable. When the output format is HTML, the book may contain interactive components, such as HTML widgets and Shiny apps, so readers may interact with certain examples in the book in real time (screenshots of these examples will be automatically taken and used when the output format is non-HTML). In this talk, we will give a quick tour through the bookdown package, and show how to quickly get started with writing a book. We will also talk about various options for editing, hosting, and publishing a book. Our goal is that authors can focus as much as possible on the content of the book, instead of spending too much time on any complicated non-portable syntax of authoring languages, or tools for converting books to different output formats. In other words, ``one ring to rule them all.’’ "],
["ryan-hafen.html", "11 Ryan Hafen", " 11 Ryan Hafen rbokeh: A Simple, Flexible, Declarative Framework for Interactive Graphics The rbokeh package is an R interface to the Bokeh visualization library. The interface is designed to be simple but flexible, allowing the expressiveness required for rapid generation of ad hoc statistical plots, while providing simple yet useful interactive capabilities such as tooltips and zoom/pan with nearly no additional effort, and additional customized interactivity with a little more effort. In this talk I will introduce rbokeh and show examples of using it to create a wide variety of interactive displays, including Shiny applications and Trelliscope. "],
["where-next.html", "12 Where Next", " 12 Where Next The book files can be found on github so that if you clone it for your own personal book other videos could be substituted in place of mine. I plan to upload the underlying dataset and code for scraping website and producing output You can also access this via the edit button in the toolbar at top of each page if you want to point out errors or make suggestion For more information on bookdown bookdown on github Authoring Books with R Markdown A Yihui Xie Webinair "],
["yihui-xie-subbed-by-hadley-w-1.html", "13 Yihui Xie (subbed by Hadley W.)", " 13 Yihui Xie (subbed by Hadley W.) Authoring Books with R Markdown Markdown is a simple and popular language for writing. R Markdown (http://rmarkdown.rstudio.com) has made it really easy to author documents that contain R code, and convert these documents to a variety of output formats, including PDF, HTML, Word, and presentations. There are still some missing pieces in the toolchain, especially when writing long-form articles and books, such as cross-references, automatic numbering of figures/tables, multiple-page HTML output and a navigation system, and so on. The R package bookdown has solved all these problems for several types of output formats, such as HTML, PDF, EPUB and MOBI e-books. The visual style of the book is customizable. When the output format is HTML, the book may contain interactive components, such as HTML widgets and Shiny apps, so readers may interact with certain examples in the book in real time (screenshots of these examples will be automatically taken and used when the output format is non-HTML). In this talk, we will give a quick tour through the bookdown package, and show how to quickly get started with writing a book. We will also talk about various options for editing, hosting, and publishing a book. Our goal is that authors can focus as much as possible on the content of the book, instead of spending too much time on any complicated non-portable syntax of authoring languages, or tools for converting books to different output formats. In other words, ``one ring to rule them all.’’ "],
["license.html", "License", " License The videos are covered by the Creative Commons License "]
]
